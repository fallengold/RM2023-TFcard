ARM GAS  C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"user_diskio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USER_initialize,"ax",%progbits
  18              		.align	1
  19              		.global	USER_initialize
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	USER_initialize:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "FATFS/Target/user_diskio.c"
   1:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN Header */
   2:FATFS/Target/user_diskio.c **** /**
   3:FATFS/Target/user_diskio.c ****  ******************************************************************************
   4:FATFS/Target/user_diskio.c ****  * @file    user_diskio.c
   5:FATFS/Target/user_diskio.c ****  * @brief   This file includes a diskio driver skeleton to be completed by the user.
   6:FATFS/Target/user_diskio.c ****  ******************************************************************************
   7:FATFS/Target/user_diskio.c ****  * @attention
   8:FATFS/Target/user_diskio.c ****  *
   9:FATFS/Target/user_diskio.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:FATFS/Target/user_diskio.c ****  * All rights reserved.
  11:FATFS/Target/user_diskio.c ****  *
  12:FATFS/Target/user_diskio.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:FATFS/Target/user_diskio.c ****  * in the root directory of this software component.
  14:FATFS/Target/user_diskio.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:FATFS/Target/user_diskio.c ****  *
  16:FATFS/Target/user_diskio.c ****  ******************************************************************************
  17:FATFS/Target/user_diskio.c ****  */
  18:FATFS/Target/user_diskio.c ****  /* USER CODE END Header */
  19:FATFS/Target/user_diskio.c **** 
  20:FATFS/Target/user_diskio.c **** #ifdef USE_OBSOLETE_USER_CODE_SECTION_0
  21:FATFS/Target/user_diskio.c **** /*
  22:FATFS/Target/user_diskio.c ****  * Warning: the user section 0 is no more in use (starting from CubeMx version 4.16.0)
  23:FATFS/Target/user_diskio.c ****  * To be suppressed in the future.
  24:FATFS/Target/user_diskio.c ****  * Kept to ensure backward compatibility with previous CubeMx versions when
  25:FATFS/Target/user_diskio.c ****  * migrating projects.
  26:FATFS/Target/user_diskio.c ****  * User code previously added there should be copied in the new user sections before
  27:FATFS/Target/user_diskio.c ****  * the section contents can be deleted.
  28:FATFS/Target/user_diskio.c ****  */
  29:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN 0 */
ARM GAS  C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s 			page 2


  30:FATFS/Target/user_diskio.c **** /* USER CODE END 0 */
  31:FATFS/Target/user_diskio.c **** #endif
  32:FATFS/Target/user_diskio.c **** 
  33:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN DECL */
  34:FATFS/Target/user_diskio.c **** 
  35:FATFS/Target/user_diskio.c **** /* Includes ------------------------------------------------------------------*/
  36:FATFS/Target/user_diskio.c **** #include <string.h>
  37:FATFS/Target/user_diskio.c **** #include "ff_gen_drv.h"
  38:FATFS/Target/user_diskio.c **** #include "user_diskio_spi.h"
  39:FATFS/Target/user_diskio.c **** 
  40:FATFS/Target/user_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  41:FATFS/Target/user_diskio.c **** /* Private define ------------------------------------------------------------*/
  42:FATFS/Target/user_diskio.c **** 
  43:FATFS/Target/user_diskio.c **** /* Private variables ---------------------------------------------------------*/
  44:FATFS/Target/user_diskio.c **** /* Disk status */
  45:FATFS/Target/user_diskio.c **** static volatile DSTATUS Stat = STA_NOINIT;
  46:FATFS/Target/user_diskio.c **** 
  47:FATFS/Target/user_diskio.c **** /* USER CODE END DECL */
  48:FATFS/Target/user_diskio.c **** 
  49:FATFS/Target/user_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  50:FATFS/Target/user_diskio.c **** DSTATUS USER_initialize (BYTE pdrv);
  51:FATFS/Target/user_diskio.c **** DSTATUS USER_status (BYTE pdrv);
  52:FATFS/Target/user_diskio.c **** DRESULT USER_read (BYTE pdrv, BYTE *buff, DWORD sector, UINT count);
  53:FATFS/Target/user_diskio.c **** #if _USE_WRITE == 1
  54:FATFS/Target/user_diskio.c ****   DRESULT USER_write (BYTE pdrv, const BYTE *buff, DWORD sector, UINT count);
  55:FATFS/Target/user_diskio.c **** #endif /* _USE_WRITE == 1 */
  56:FATFS/Target/user_diskio.c **** #if _USE_IOCTL == 1
  57:FATFS/Target/user_diskio.c ****   DRESULT USER_ioctl (BYTE pdrv, BYTE cmd, void *buff);
  58:FATFS/Target/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  59:FATFS/Target/user_diskio.c **** 
  60:FATFS/Target/user_diskio.c **** Diskio_drvTypeDef  USER_Driver =
  61:FATFS/Target/user_diskio.c **** {
  62:FATFS/Target/user_diskio.c ****   USER_initialize,
  63:FATFS/Target/user_diskio.c ****   USER_status,
  64:FATFS/Target/user_diskio.c ****   USER_read,
  65:FATFS/Target/user_diskio.c **** #if  _USE_WRITE
  66:FATFS/Target/user_diskio.c ****   USER_write,
  67:FATFS/Target/user_diskio.c **** #endif  /* _USE_WRITE == 1 */
  68:FATFS/Target/user_diskio.c **** #if  _USE_IOCTL == 1
  69:FATFS/Target/user_diskio.c ****   USER_ioctl,
  70:FATFS/Target/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  71:FATFS/Target/user_diskio.c **** };
  72:FATFS/Target/user_diskio.c **** 
  73:FATFS/Target/user_diskio.c **** /* Private functions ---------------------------------------------------------*/
  74:FATFS/Target/user_diskio.c **** 
  75:FATFS/Target/user_diskio.c **** /**
  76:FATFS/Target/user_diskio.c ****   * @brief  Initializes a Drive
  77:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
  78:FATFS/Target/user_diskio.c ****   * @retval DSTATUS: Operation status
  79:FATFS/Target/user_diskio.c ****   */
  80:FATFS/Target/user_diskio.c **** DSTATUS USER_initialize (
  81:FATFS/Target/user_diskio.c **** 	BYTE pdrv           /* Physical drive nmuber to identify the drive */
  82:FATFS/Target/user_diskio.c **** )
  83:FATFS/Target/user_diskio.c **** {
  30              		.loc 1 83 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s 			page 3


  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 83 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  84:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN INIT */
  85:FATFS/Target/user_diskio.c ****   return USER_SPI_initialize(pdrv);
  40              		.loc 1 85 3 is_stmt 1 view .LVU2
  41              		.loc 1 85 10 is_stmt 0 view .LVU3
  42 0002 FFF7FEFF 		bl	USER_SPI_initialize
  43              	.LVL1:
  86:FATFS/Target/user_diskio.c ****   /* USER CODE END INIT */
  87:FATFS/Target/user_diskio.c **** }
  44              		.loc 1 87 1 view .LVU4
  45 0006 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE132:
  49              		.section	.text.USER_status,"ax",%progbits
  50              		.align	1
  51              		.global	USER_status
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	USER_status:
  58              	.LVL2:
  59              	.LFB133:
  88:FATFS/Target/user_diskio.c **** 
  89:FATFS/Target/user_diskio.c **** /**
  90:FATFS/Target/user_diskio.c ****   * @brief  Gets Disk Status
  91:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
  92:FATFS/Target/user_diskio.c ****   * @retval DSTATUS: Operation status
  93:FATFS/Target/user_diskio.c ****   */
  94:FATFS/Target/user_diskio.c **** DSTATUS USER_status (
  95:FATFS/Target/user_diskio.c **** 	BYTE pdrv       /* Physical drive number to identify the drive */
  96:FATFS/Target/user_diskio.c **** )
  97:FATFS/Target/user_diskio.c **** {
  60              		.loc 1 97 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		.loc 1 97 1 is_stmt 0 view .LVU6
  65 0000 08B5     		push	{r3, lr}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 3, -8
  69              		.cfi_offset 14, -4
  98:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN STATUS */
  99:FATFS/Target/user_diskio.c ****   return USER_SPI_status(pdrv);
  70              		.loc 1 99 3 is_stmt 1 view .LVU7
  71              		.loc 1 99 10 is_stmt 0 view .LVU8
  72 0002 FFF7FEFF 		bl	USER_SPI_status
  73              	.LVL3:
 100:FATFS/Target/user_diskio.c ****   /* USER CODE END STATUS */
 101:FATFS/Target/user_diskio.c **** }
ARM GAS  C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s 			page 4


  74              		.loc 1 101 1 view .LVU9
  75 0006 08BD     		pop	{r3, pc}
  76              		.cfi_endproc
  77              	.LFE133:
  79              		.section	.text.USER_read,"ax",%progbits
  80              		.align	1
  81              		.global	USER_read
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	USER_read:
  88              	.LVL4:
  89              	.LFB134:
 102:FATFS/Target/user_diskio.c **** 
 103:FATFS/Target/user_diskio.c **** /**
 104:FATFS/Target/user_diskio.c ****   * @brief  Reads Sector(s)
 105:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 106:FATFS/Target/user_diskio.c ****   * @param  *buff: Data buffer to store read data
 107:FATFS/Target/user_diskio.c ****   * @param  sector: Sector address (LBA)
 108:FATFS/Target/user_diskio.c ****   * @param  count: Number of sectors to read (1..128)
 109:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 110:FATFS/Target/user_diskio.c ****   */
 111:FATFS/Target/user_diskio.c **** DRESULT USER_read (
 112:FATFS/Target/user_diskio.c **** 	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
 113:FATFS/Target/user_diskio.c **** 	BYTE *buff,     /* Data buffer to store read data */
 114:FATFS/Target/user_diskio.c **** 	DWORD sector,   /* Sector address in LBA */
 115:FATFS/Target/user_diskio.c **** 	UINT count      /* Number of sectors to read */
 116:FATFS/Target/user_diskio.c **** )
 117:FATFS/Target/user_diskio.c **** {
  90              		.loc 1 117 1 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		.loc 1 117 1 is_stmt 0 view .LVU11
  95 0000 08B5     		push	{r3, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 3, -8
  99              		.cfi_offset 14, -4
 118:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN READ */
 119:FATFS/Target/user_diskio.c ****   return USER_SPI_read(pdrv, buff, sector, count);
 100              		.loc 1 119 3 is_stmt 1 view .LVU12
 101              		.loc 1 119 10 is_stmt 0 view .LVU13
 102 0002 FFF7FEFF 		bl	USER_SPI_read
 103              	.LVL5:
 120:FATFS/Target/user_diskio.c ****   /* USER CODE END READ */
 121:FATFS/Target/user_diskio.c **** }
 104              		.loc 1 121 1 view .LVU14
 105 0006 08BD     		pop	{r3, pc}
 106              		.cfi_endproc
 107              	.LFE134:
 109              		.section	.text.USER_write,"ax",%progbits
 110              		.align	1
 111              		.global	USER_write
 112              		.syntax unified
 113              		.thumb
ARM GAS  C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s 			page 5


 114              		.thumb_func
 115              		.fpu fpv4-sp-d16
 117              	USER_write:
 118              	.LVL6:
 119              	.LFB135:
 122:FATFS/Target/user_diskio.c **** 
 123:FATFS/Target/user_diskio.c **** /**
 124:FATFS/Target/user_diskio.c ****   * @brief  Writes Sector(s)
 125:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 126:FATFS/Target/user_diskio.c ****   * @param  *buff: Data to be written
 127:FATFS/Target/user_diskio.c ****   * @param  sector: Sector address (LBA)
 128:FATFS/Target/user_diskio.c ****   * @param  count: Number of sectors to write (1..128)
 129:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 130:FATFS/Target/user_diskio.c ****   */
 131:FATFS/Target/user_diskio.c **** #if _USE_WRITE == 1
 132:FATFS/Target/user_diskio.c **** DRESULT USER_write (
 133:FATFS/Target/user_diskio.c **** 	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
 134:FATFS/Target/user_diskio.c **** 	const BYTE *buff,   /* Data to be written */
 135:FATFS/Target/user_diskio.c **** 	DWORD sector,       /* Sector address in LBA */
 136:FATFS/Target/user_diskio.c **** 	UINT count          /* Number of sectors to write */
 137:FATFS/Target/user_diskio.c **** )
 138:FATFS/Target/user_diskio.c **** {
 120              		.loc 1 138 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		.loc 1 138 1 is_stmt 0 view .LVU16
 125 0000 08B5     		push	{r3, lr}
 126              	.LCFI3:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 3, -8
 129              		.cfi_offset 14, -4
 139:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN WRITE */
 140:FATFS/Target/user_diskio.c ****   /* USER CODE HERE */
 141:FATFS/Target/user_diskio.c ****   return USER_SPI_write(pdrv, buff, sector, count);
 130              		.loc 1 141 3 is_stmt 1 view .LVU17
 131              		.loc 1 141 10 is_stmt 0 view .LVU18
 132 0002 FFF7FEFF 		bl	USER_SPI_write
 133              	.LVL7:
 142:FATFS/Target/user_diskio.c ****   /* USER CODE END WRITE */
 143:FATFS/Target/user_diskio.c **** }
 134              		.loc 1 143 1 view .LVU19
 135 0006 08BD     		pop	{r3, pc}
 136              		.cfi_endproc
 137              	.LFE135:
 139              		.section	.text.USER_ioctl,"ax",%progbits
 140              		.align	1
 141              		.global	USER_ioctl
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	USER_ioctl:
 148              	.LVL8:
 149              	.LFB136:
 144:FATFS/Target/user_diskio.c **** #endif /* _USE_WRITE == 1 */
 145:FATFS/Target/user_diskio.c **** 
ARM GAS  C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s 			page 6


 146:FATFS/Target/user_diskio.c **** /**
 147:FATFS/Target/user_diskio.c ****   * @brief  I/O control operation
 148:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 149:FATFS/Target/user_diskio.c ****   * @param  cmd: Control code
 150:FATFS/Target/user_diskio.c ****   * @param  *buff: Buffer to send/receive control data
 151:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 152:FATFS/Target/user_diskio.c ****   */
 153:FATFS/Target/user_diskio.c **** #if _USE_IOCTL == 1
 154:FATFS/Target/user_diskio.c **** DRESULT USER_ioctl (
 155:FATFS/Target/user_diskio.c **** 	BYTE pdrv,      /* Physical drive nmuber (0..) */
 156:FATFS/Target/user_diskio.c **** 	BYTE cmd,       /* Control code */
 157:FATFS/Target/user_diskio.c **** 	void *buff      /* Buffer to send/receive control data */
 158:FATFS/Target/user_diskio.c **** )
 159:FATFS/Target/user_diskio.c **** {
 150              		.loc 1 159 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 159 1 is_stmt 0 view .LVU21
 155 0000 08B5     		push	{r3, lr}
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 3, -8
 159              		.cfi_offset 14, -4
 160:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN IOCTL */
 161:FATFS/Target/user_diskio.c ****   return USER_SPI_ioctl(pdrv, cmd, buff);
 160              		.loc 1 161 3 is_stmt 1 view .LVU22
 161              		.loc 1 161 10 is_stmt 0 view .LVU23
 162 0002 FFF7FEFF 		bl	USER_SPI_ioctl
 163              	.LVL9:
 162:FATFS/Target/user_diskio.c ****   /* USER CODE END IOCTL */
 163:FATFS/Target/user_diskio.c **** }
 164              		.loc 1 163 1 view .LVU24
 165 0006 08BD     		pop	{r3, pc}
 166              		.cfi_endproc
 167              	.LFE136:
 169              		.global	USER_Driver
 170              		.section	.data.Stat,"aw"
 173              	Stat:
 174 0000 01       		.byte	1
 175              		.section	.data.USER_Driver,"aw"
 176              		.align	2
 179              	USER_Driver:
 180 0000 00000000 		.word	USER_initialize
 181 0004 00000000 		.word	USER_status
 182 0008 00000000 		.word	USER_read
 183 000c 00000000 		.word	USER_write
 184 0010 00000000 		.word	USER_ioctl
 185              		.text
 186              	.Letext0:
 187              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 188              		.file 3 "Middlewares/Third_Party/FatFs/src/diskio.h"
 189              		.file 4 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 190              		.file 5 "FATFS/Target/user_diskio_spi.h"
ARM GAS  C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 user_diskio.c
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:18     .text.USER_initialize:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:26     .text.USER_initialize:0000000000000000 USER_initialize
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:50     .text.USER_status:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:57     .text.USER_status:0000000000000000 USER_status
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:80     .text.USER_read:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:87     .text.USER_read:0000000000000000 USER_read
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:110    .text.USER_write:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:117    .text.USER_write:0000000000000000 USER_write
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:140    .text.USER_ioctl:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:147    .text.USER_ioctl:0000000000000000 USER_ioctl
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:179    .data.USER_Driver:0000000000000000 USER_Driver
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:173    .data.Stat:0000000000000000 Stat
C:\Users\Falle\AppData\Local\Temp\cccmdDOf.s:176    .data.USER_Driver:0000000000000000 $d

UNDEFINED SYMBOLS
USER_SPI_initialize
USER_SPI_status
USER_SPI_read
USER_SPI_write
USER_SPI_ioctl
